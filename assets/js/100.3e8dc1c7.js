(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{373:function(s,t,a){"use strict";a.r(t);var e=a(25),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-postgresql-10-10-설치"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-postgresql-10-10-설치"}},[s._v("#")]),s._v(" 1. PostgreSQL 10.10 설치")]),s._v(" "),a("ul",[a("li",[a("code",[s._v(".bash_profile")]),s._v(" 등록")]),s._v(" "),a("li",[a("code",[s._v("initdb -D /usr/local/pgsql/data")]),s._v(" 까지 실행한 상태")]),s._v(" "),a("li",[s._v("설정파일 변경\n"),a("ul",[a("li",[s._v("pg_hba.conf")]),s._v(" "),a("li",[s._v("postgresql.conf")])])])]),s._v(" "),a("h3",{attrs:{id:"postgresql-10-check-db-dir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-10-check-db-dir"}},[s._v("#")]),s._v(" postgresql-10-check-db-dir")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This script verifies that the postgresql data directory has been correctly")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# initialized.  We do not want to automatically initdb it, because that has")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a risk of catastrophic failure (ie, overwriting a valuable database) in")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# corner cases, such as a remotely mounted database on a volume that's a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bit slow to mount.  But we can at least emit a message advising newbies")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# what to do.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PGDATA")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(' database-path"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PGVERSION is the full package version, e.g., 10.0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: the specfile inserts the correct value during package build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PGVERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PGMAJORVERSION is major version, e.g., 9.6 (this should match PG_VERSION)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PGMAJORVERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGVERSION")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\([0-9]*\\.[0-9]*\\).*$/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v("/'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PREVMAJORVERSION is the previous major version, e.g., 9.5, for upgrades")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: the specfile inserts the correct value during package build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PREVMAJORVERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PGDOCDIR is the directory containing the package's documentation")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: the specfile inserts the correct value during package build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PGDOCDIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/share/doc/postgresql10-10.10\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check for the PGDATA structure")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),s._v('/PG_VERSION"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -d "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),s._v('/base"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check version of existing PGDATA")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),s._v('/PG_VERSION"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGMAJORVERSION")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" A-OK\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),s._v('/PG_VERSION"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PREVMAJORVERSION")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"An old version of the database format was found."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Use '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("postgresql-setup upgrade"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(" to upgrade to version "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGMAJORVERSION")]),s._v('."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"See '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDOCDIR")]),s._v('/README.rpm-dist for more information."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"An old version of the database format was found."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You need to dump and reload before using PostgreSQL '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGMAJORVERSION")]),s._v('."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"See '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDOCDIR")]),s._v('/README.rpm-dist for more information."')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# No existing PGDATA! Warn the user to initdb it.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDATA")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(' is missing or empty."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Use '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("/usr/pgsql-10/bin/postgresql-10-setup initdb"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(' to initialize the database cluster."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"See '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PGDOCDIR")]),s._v('/README.rpm-dist for more information."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("ul",[a("li",[s._v("service 파일 Symbolic Link 설정\n"),a("code",[s._v("ln -s /usr/local/pgsql/data/postgresql.service postgresql.service")])])]),s._v(" "),a("h3",{attrs:{id:"postgresql-10-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-10-service"}},[s._v("#")]),s._v(" postgresql-10.service")]),s._v(" "),a("ul",[a("li",[s._v("yum install 로 설치한 서버에서 systemctl 로 등록하기 위해 가져옴\n"),a("ul",[a("li",[s._v("/usr/lib/systemd/system/postgresql-10.service")])])])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# It\'s not recommended to modify this file in-place, because it will be\n# overwritten during package upgrades.  If you want to customize, the\n# best way is to create a file "/etc/systemd/system/postgresql-10.service",\n# containing\n#       .include /usr/lib/systemd/system/postgresql-10.service\n#       ...make your changes here...\n# For more info about custom unit files, see\n# http://fedoraproject.org/wiki/Systemd#How_do_I_customize_a_unit_file.2F_add_a_custom_unit_file.3F\n\n# Note: changing PGDATA will typically require adjusting SELinux\n# configuration as well.\n\n# Note: do not use a PGDATA pathname containing spaces, or you will\n# break postgresql-setup.\n[Unit]\nDescription=PostgreSQL 10 database server\nDocumentation=https://www.postgresql.org/docs/10/static/\nAfter=syslog.target\nAfter=network.target\n\n[Service]\nType=notify\n\nUser=postgres\nGroup=postgres\n\n# Note: avoid inserting whitespace in these Environment= lines, or you may\n# break postgresql-setup.\n\n# Location of database directory\nEnvironment=PGDATA=/var/lib/pgsql/10/data/\n\n# Where to send early-startup messages from the server (before the logging\n# options of postgresql.conf take effect)\n# This is normally controlled by the global default set by systemd\n# StandardOutput=syslog\n\n# Disable OOM kill on the postmaster\nOOMScoreAdjust=-1000\nEnvironment=PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj\nEnvironment=PG_OOM_ADJUST_VALUE=0\n\nExecStartPre=/usr/pgsql-10/bin/postgresql-10-check-db-dir ${PGDATA}\nExecStart=/usr/pgsql-10/bin/postmaster -D ${PGDATA}\nExecReload=/bin/kill -HUP $MAINPID\nKillMode=mixed\nKillSignal=SIGINT\n\n\n# Do not set any timeout value, so that systemd will not kill postmaster\n# during crash recovery.\nTimeoutSec=0\n\n[Install]\nWantedBy=multi-user.target\n')])])]),a("h2",{attrs:{id:"_2-database-role-table-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-database-role-table-생성"}},[s._v("#")]),s._v(" 2. Database, Role, Table 생성")]),s._v(" "),a("h2",{attrs:{id:"_3-replication-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-replication-생성"}},[s._v("#")]),s._v(" 3. Replication 생성")]),s._v(" "),a("h3",{attrs:{id:"dump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dump"}},[s._v("#")]),s._v(" dump")]),s._v(" "),a("h3",{attrs:{id:"init-standby-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-standby-sh"}},[s._v("#")]),s._v(" init_standby.sh")]),s._v(" "),a("ol",[a("li",[s._v("db connection check")]),s._v(" "),a("li",[s._v("alter subscription disable")]),s._v(" "),a("li",[s._v("drop subscription")]),s._v(" "),a("li",[s._v("drop database")]),s._v(" "),a("li",[s._v("create tables")]),s._v(" "),a("li",[s._v("create subscription")]),s._v(" "),a("li",[s._v("check replication")])])])}),[],!1,null,null,null);t.default=n.exports}}]);